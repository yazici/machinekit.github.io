.TH HBRIDGE "9" "2016-07-09" "Machinekit Documentation" "HAL Component"
.de TQ
.br
.ns
.TP \\$1
..

.SH INSTANTIABLE COMPONENTS
.HP
.HP
.B All instantiable components can be loaded in two manners

.LP
.B Using loadrt with or without count= | names= parameters as per legacy components

.LP
.B Using newinst, which names the instance and allows further parameters and arguments,

.LP
.B primarily pincount= which can set the number of pins created for that instance (where applicable)

.HP
.RE
.SH NAME
.HP
.HP
hbridge \- generate driving signals for 2 PWM generators to drive an H-Bridge
.SH SYNOPSIS
.HP
.HP
hbridge
.SH USAGE SYNOPSIS
.HP
.HP
.B loadrt hbridge 
.LP
.B newinst hbridge <newinstname> [ pincount=\fIN\fB | iprefix=\fIprefix\fB ]
.B                             [instanceparamX=\fIX\fB | argX=\fIX\fB ]
.HP
( args in [ ] denote possible args and parameters, may not be used in all components )
.HP

.SH DESCRIPTION
.HP
.HP

Together with 2 PWM's, this comp can be used to drive a DC motor through an H-bridge.
If the H-bridge needs a PWM signal at full speed (e.g. for charge pumps), limit the
output value by setting maxout.
See also: http://en.wikipedia.org/wiki/H_bridge .

Two output pins, up and down. 

For positive inputs, the PWM/PDM driving signal appears on up, while down is low. 

For negative inputs, the driving signal on down, while up is low. 

Suitable for driving the two sides of an H-bridge to generate a bipolar output.

.SH FUNCTIONS
.HP
.HP
.TP
\fBhbridge.N.funct\fR 
( OR
\fB<newinstname>.funct\fR (requires a floating-point thread) )
.HP

.SH PINS
.HP
.HP
.TP
.B hbridge.N.command \fR float in \fR
( OR
.B <newinstname>.command \fR float in \fR )

.HP
target speed, < 0: reverse, > 0: forward
.TP
.B hbridge.N.down \fR float out \fR
( OR
.B <newinstname>.down \fR float out \fR )

.HP
driving value for PWM1, 0..maxout
.TP
.B hbridge.N.up \fR float out \fR
( OR
.B <newinstname>.up \fR float out \fR )

.HP
driving value for PWM2, 0..maxout
.TP
.B hbridge.N.enable-out \fR bit out \fR
( OR
.B <newinstname>.enable-out \fR bit out \fR )

.HP
output to enable both half-bridges
.TP
.B hbridge.N.enable \fR bit in \fR
( OR
.B <newinstname>.enable \fR bit in \fR )

.HP
let motor free run if false
.TP
.B hbridge.N.brake \fR bit in \fR
( OR
.B <newinstname>.brake \fR bit in \fR )

.HP
brake motor if true; needs enable to be true
.TP
.B hbridge.N.maxout \fR float io \fR(default: \fI1.0\fR)
( OR
.B <newinstname>.maxout \fR float io \fR(default: \fI1.0\fR) )

.HP
limit for the up and down pins
.SH LICENCE
.HP
.HP
GPL v2
.HP
