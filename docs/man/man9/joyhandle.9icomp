.TH JOYHANDLE "9" "2016-07-09" "Machinekit Documentation" "HAL Component"
.de TQ
.br
.ns
.TP \\$1
..

.SH INSTANTIABLE COMPONENTS
.HP
.HP
.B All instantiable components can be loaded in two manners

.LP
.B Using loadrt with or without count= | names= parameters as per legacy components

.LP
.B Using newinst, which names the instance and allows further parameters and arguments,

.LP
.B primarily pincount= which can set the number of pins created for that instance (where applicable)

.HP
.RE
.SH NAME
.HP
.HP
joyhandle \- sets nonlinear joypad movements, deadbands and scales
.SH SYNOPSIS
.HP
.HP
joyhandle
.SH USAGE SYNOPSIS
.HP
.HP
.B loadrt joyhandle 
.LP
.B newinst joyhandle <newinstname> [ pincount=\fIN\fB | iprefix=\fIprefix\fB ]
.B                             [instanceparamX=\fIX\fB | argX=\fIX\fB ]
.HP
( args in [ ] denote possible args and parameters, may not be used in all components )
.HP

.SH DESCRIPTION
.HP
.HP

The component *joyhandle* uses the following formula for a non linear joypad movements:

y = (scale * (a * x ^ power + b * x)) + offset

The parameters a and b are adjusted in such a way, that the function starts at (deadband,offset) and ends at (1,scale+offset).

Negative values will be treated point symetrically to origin. Values -deadband < x < +deadband will be set to zero.

Values x > 1 and x < -1 will be skipped to (+-(scale+offset). Invert transforms the function to a progressive movement.

With power one can adjust the nonlinearity (default = 2). Default for deadband is 0.

Valid values are: power >= 1.0 (reasonable values are 1.x .. 4-5, take higher power-values for higher deadbands (>0.5),

If you want to start with a nearly horizontal slope, 0 <= deadband < 0.99 (reasonable 0.1).

An additional offset component can be set in special cases (default = 0).

All values can be adjusted for each instance separately.

.SH FUNCTIONS
.HP
.HP
.TP
\fBjoyhandle.N.funct\fR 
( OR
\fB<newinstname>.funct\fR (requires a floating-point thread) )
.HP

.SH PINS
.HP
.HP
.TP
.B joyhandle.N.in \fR float in \fR
( OR
.B <newinstname>.in \fR float in \fR )

.TP
.B joyhandle.N.out \fR float out \fR
( OR
.B <newinstname>.out \fR float out \fR )

.TP
.B joyhandle.N.power \fR float io \fR(default: \fI2.0\fR)
( OR
.B <newinstname>.power \fR float io \fR(default: \fI2.0\fR) )

.TP
.B joyhandle.N.deadband \fR float io \fR(default: \fI0.0\fR)
( OR
.B <newinstname>.deadband \fR float io \fR(default: \fI0.0\fR) )

.TP
.B joyhandle.N.scale \fR float io \fR(default: \fI1.0\fR)
( OR
.B <newinstname>.scale \fR float io \fR(default: \fI1.0\fR) )

.TP
.B joyhandle.N.offset \fR float io \fR(default: \fI0.0\fR)
( OR
.B <newinstname>.offset \fR float io \fR(default: \fI0.0\fR) )

.TP
.B joyhandle.N.inverse \fR bit io \fR(default: \fIfalse\fR)
( OR
.B <newinstname>.inverse \fR bit io \fR(default: \fIfalse\fR) )

.SH LICENCE
.HP
.HP
GPL
.HP
