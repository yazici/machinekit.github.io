.TH KNOB2FLOAT "9" "2016-07-09" "Machinekit Documentation" "HAL Component"
.de TQ
.br
.ns
.TP \\$1
..

.SH INSTANTIABLE COMPONENTS
.HP
.HP
.B All instantiable components can be loaded in two manners

.LP
.B Using loadrt with or without count= | names= parameters as per legacy components

.LP
.B Using newinst, which names the instance and allows further parameters and arguments,

.LP
.B primarily pincount= which can set the number of pins created for that instance (where applicable)

.HP
.RE
.SH NAME
.HP
.HP
knob2float \- Convert counts (probably from an encoder) to a float value
.SH SYNOPSIS
.HP
.HP
knob2float
.SH USAGE SYNOPSIS
.HP
.HP
.B loadrt knob2float 
.LP
.B newinst knob2float <newinstname> [ pincount=\fIN\fB | iprefix=\fIprefix\fB ]
.B                             [instanceparamX=\fIX\fB | argX=\fIX\fB ]
.HP
( args in [ ] denote possible args and parameters, may not be used in all components )
.HP

.SH FUNCTIONS
.HP
.HP
.TP
\fBknob2float.N.funct\fR 
( OR
\fB<newinstname>.funct\fR (requires a floating-point thread) )
.HP

.SH PINS
.HP
.HP
.TP
.B knob2float.N.counts \fR s32 in \fR
( OR
.B <newinstname>.counts \fR s32 in \fR )

.HP
Counts
.TP
.B knob2float.N.enable \fR bit in \fR
( OR
.B <newinstname>.enable \fR bit in \fR )

.HP
When TRUE, output is controlled by count, when FALSE, output is fixed
.TP
.B knob2float.N.scale \fR float in \fR
( OR
.B <newinstname>.scale \fR float in \fR )

.HP
Amount of output change per count
.TP
.B knob2float.N.out \fR float out \fR
( OR
.B <newinstname>.out \fR float out \fR )

.HP
Output value
.TP
.B knob2float.N.max_out \fR float io \fR(default: \fI1.0\fR)
( OR
.B <newinstname>.max_out \fR float io \fR(default: \fI1.0\fR) )

.HP
Maximum output value, further increases in count will be ignored
.TP
.B knob2float.N.min_out \fR float io \fR(default: \fI0.0\fR)
( OR
.B <newinstname>.min_out \fR float io \fR(default: \fI0.0\fR) )

.HP
Minimum output value, further decreases in count will be ignored
.SH LICENCE
.HP
.HP
GPL
.HP
