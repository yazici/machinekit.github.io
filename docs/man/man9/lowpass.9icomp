.TH LOWPASS "9" "2016-07-09" "Machinekit Documentation" "HAL Component"
.de TQ
.br
.ns
.TP \\$1
..

.SH INSTANTIABLE COMPONENTS
.HP
.HP
.B All instantiable components can be loaded in two manners

.LP
.B Using loadrt with or without count= | names= parameters as per legacy components

.LP
.B Using newinst, which names the instance and allows further parameters and arguments,

.LP
.B primarily pincount= which can set the number of pins created for that instance (where applicable)

.HP
.RE
.SH NAME
.HP
.HP
lowpass \- Low-pass filter
.SH SYNOPSIS
.HP
.HP
lowpass
.SH USAGE SYNOPSIS
.HP
.HP
.B loadrt lowpass 
.LP
.B newinst lowpass <newinstname> [ pincount=\fIN\fB | iprefix=\fIprefix\fB ]
.B                             [instanceparamX=\fIX\fB | argX=\fIX\fB ]
.HP
( args in [ ] denote possible args and parameters, may not be used in all components )
.HP

.SH FUNCTIONS
.HP
.HP
.TP
\fBlowpass.N.funct\fR 
( OR
\fB<newinstname>.funct\fR (requires a floating-point thread) )
.HP

.SH PINS
.HP
.HP
.TP
.B lowpass.N.in \fR float in \fR
( OR
.B <newinstname>.in \fR float in \fR )

.TP
.B lowpass.N.out \fR float out \fR
( OR
.B <newinstname>.out \fR float out \fR )

.HP
 out += (in - out) * gain 
.TP
.B lowpass.N.load \fR bit in \fR
( OR
.B <newinstname>.load \fR bit in \fR )

.HP
When TRUE, copy *in* to *out* instead of applying the filter equation.
.TP
.B lowpass.N.gain \fR float in \fR
( OR
.B <newinstname>.gain \fR float in \fR )

.SH NOTES
.HP
.HP
The effect of a specific *gain* value is dependent on the period of the function that *lowpass.N* is added to
.HP
.SH LICENCE
.HP
.HP
GPL
.HP
