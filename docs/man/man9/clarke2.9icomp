.TH CLARKE2 "9" "2016-07-09" "Machinekit Documentation" "HAL Component"
.de TQ
.br
.ns
.TP \\$1
..

.SH INSTANTIABLE COMPONENTS
.HP
.HP
.B All instantiable components can be loaded in two manners

.LP
.B Using loadrt with or without count= | names= parameters as per legacy components

.LP
.B Using newinst, which names the instance and allows further parameters and arguments,

.LP
.B primarily pincount= which can set the number of pins created for that instance (where applicable)

.HP
.RE
.SH NAME
.HP
.HP
clarke2 \- Two input version of Clarke transform
.SH SYNOPSIS
.HP
.HP
clarke2
.SH USAGE SYNOPSIS
.HP
.HP
.B loadrt clarke2 
.LP
.B newinst clarke2 <newinstname> [ pincount=\fIN\fB | iprefix=\fIprefix\fB ]
.B                             [instanceparamX=\fIX\fB | argX=\fIX\fB ]
.HP
( args in [ ] denote possible args and parameters, may not be used in all components )
.HP

.SH DESCRIPTION
.HP
.HP

The Clarke transform can be used to translate a vector
quantity from a three phase system (three components 120 degrees
apart) to a two phase Cartesian system.

*clarke2* implements
a special case of the Clarke transform, which only needs two of the
three input phases.  In a three wire three phase system, the sum of the
three phase currents or voltages must always be zero.  As a result only
two of the three are needed to completely define the current or voltage.
*clarke2* assumes that the sum is zero, so it only uses phases A and
B of the input.  Since the H (homopolar) output will always be zero in
this case, it is not generated.
.SH FUNCTIONS
.HP
.HP
.TP
\fBclarke2.N.funct\fR 
( OR
\fB<newinstname>.funct\fR (requires a floating-point thread) )
.HP

.SH PINS
.HP
.HP
.TP
.B clarke2.N.a \fR float in \fR
( OR
.B <newinstname>.a \fR float in \fR )

.TP
.B clarke2.N.b \fR float in \fR
( OR
.B <newinstname>.b \fR float in \fR )

.HP
first two phases of three phase input
.TP
.B clarke2.N.x \fR float out \fR
( OR
.B <newinstname>.x \fR float out \fR )

.TP
.B clarke2.N.y \fR float out \fR
( OR
.B <newinstname>.y \fR float out \fR )

.HP
cartesian components of output
.SH SEE ALSO
.HP
.HP

*clarke3* for the general case, *clarkeinv* for the inverse transform.

.HP
.SH LICENCE
.HP
.HP
GPL
.HP
