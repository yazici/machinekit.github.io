.TH NEAR "9" "2016-07-09" "Machinekit Documentation" "HAL Component"
.de TQ
.br
.ns
.TP \\$1
..

.SH INSTANTIABLE COMPONENTS
.HP
.HP
.B All instantiable components can be loaded in two manners

.LP
.B Using loadrt with or without count= | names= parameters as per legacy components

.LP
.B Using newinst, which names the instance and allows further parameters and arguments,

.LP
.B primarily pincount= which can set the number of pins created for that instance (where applicable)

.HP
.RE
.SH NAME
.HP
.HP
near \- Determine whether two values are roughly equal.
.SH SYNOPSIS
.HP
.HP
near
.SH USAGE SYNOPSIS
.HP
.HP
.B loadrt near 
.LP
.B newinst near <newinstname> [ pincount=\fIN\fB | iprefix=\fIprefix\fB ]
.B                             [instanceparamX=\fIX\fB | argX=\fIX\fB ]
.HP
( args in [ ] denote possible args and parameters, may not be used in all components )
.HP

.SH FUNCTIONS
.HP
.HP
.TP
\fBnear.N.funct\fR 
( OR
\fB<newinstname>.funct\fR (requires a floating-point thread) )
.HP

.SH PINS
.HP
.HP
.TP
.B near.N.in1_ \fR float in \fR
( OR
.B <newinstname>.in1_ \fR float in \fR )

.TP
.B near.N.in2_ \fR float in \fR
( OR
.B <newinstname>.in2_ \fR float in \fR )

.TP
.B near.N.scale \fR float io \fR(default: \fI1.0\fR)
( OR
.B <newinstname>.scale \fR float io \fR(default: \fI1.0\fR) )

.TP
.B near.N.difference \fR float io \fR(default: \fI0.0\fR)
( OR
.B <newinstname>.difference \fR float io \fR(default: \fI0.0\fR) )

.TP
.B near.N.out \fR bit out \fR
( OR
.B <newinstname>.out \fR bit out \fR )

.HP

    out is true if in1 and in2 are within a factor of scale 
    (i.e., for in1 positive, in1 / scale <= in2 <= in1 * scale), 
    OR
    if their absolute difference is no greater than difference 
    (i.e.,|in1-in2| <= difference).  out is false otherwise.

.SH LICENCE
.HP
.HP
GPL
.HP
